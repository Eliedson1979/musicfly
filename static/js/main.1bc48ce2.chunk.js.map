{"version":3,"sources":["components/Loading.js","images/fone.svg","services/userAPI.js","pages/Login.js","services/searchAlbumsAPI.js","components/CardAlbum.js","images/default-user.svg","components/Header.js","pages/Search.js","components/MusicCard.js","services/favoriteSongsAPI.js","services/musicsAPI.js","pages/Album.js","pages/Favorites.js","pages/Profile.js","pages/ProfileEdit.js","pages/NotFound.js","App.js","index.js"],"names":["Loading","className","Component","USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","updateUser","updatedUser","Login","handleChange","value","target","setState","username","isLoginDisabled","length","loadUserInfo","event","preventDefault","state","isLoading","redirectToSearchPage","push","props","history","this","src","fone","alt","htmlFor","type","id","onChange","placeholder","disabled","onClick","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","fetch","APIResponse","json","results","map","artistId","artistName","collectionId","collectionName","collectionPrice","artworkUrl100","releaseDate","trackCount","CardAlbum","albums","to","Header","getUserInfo","userData","userInfo","defaultUser","Search","userSearch","getAlbums","artistFound","artistAlbums","onSubmit","MusicCard","music","trackId","trackName","previewUrl","favSongsChecked","controls","kind","checked","e","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","getMusics","request","requestJson","Album","loadingFav","addOrRemoveFav","action","loadSongs","match","params","data","album","successfulLoading","loadFavoriteSongs","forEach","slice","Favorites","showFavSongs","favSongs","Object","fromEntries","Profile","fetchUser","style","backgroundColor","ProfileEdit","userInformations","validateNewInfo","updateProfileInfo","redirectToProfile","validate","values","every","info","isSaveButtonDisabled","maxLength","App","exact","path","component","NotFound","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bc48ce2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/Loading.css';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className=\"Loading wave-bottom\">\n        <h2>Carregando...</h2>\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","export default __webpack_public_path__ + \"static/media/fone.64c20545.svg\";","const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import { func, shape } from 'prop-types';\nimport React, { Component } from 'react';\nimport Loading from '../components/Loading';\nimport fone from '../images/fone.svg';\nimport { createUser } from '../services/userAPI';\nimport '../styles/Login.css';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      isLoading: false,\n      isLoginDisabled: true,\n    };\n  }\n\n  handleChange = ({ target: { value } }) => {\n    const MIN_CHAR_LENGTH = 3;\n    this.setState({\n      username: value,\n      isLoginDisabled: value.length < MIN_CHAR_LENGTH,\n    });\n  };\n\n  loadUserInfo = async (event) => {\n    event.preventDefault();\n    const { username } = this.state;\n    this.setState({ isLoading: true });\n    await createUser({ name: username });\n    this.redirectToSearchPage();\n  };\n\n  redirectToSearchPage = () => {\n    const { history: { push } } = this.props;\n    push('/search');\n  }\n\n  render() {\n    const { username, isLoginDisabled, isLoading } = this.state;\n    return (\n      <div data-testid=\"page-login\" className=\"Login-Page wave-header\">\n        { isLoading ? <Loading /> : (\n          <>\n            <img src={fone} alt=\"fone\" className='fone'/>\n            <h1>MusicFly</h1>\n            <form className=\"Login-Form\">\n              <label htmlFor=\"name-input\">\n                {' '}\n                <input\n                  type=\"text\"\n                  id=\"name-input\"\n                  data-testid=\"login-name-input\"\n                  value={ username }\n                  onChange={ this.handleChange }\n                  placeholder=\"Nome de usuário\"\n                />\n              </label>\n              <div className=\"Button-Login\">\n                <button\n                  type=\"submit\"\n                  data-testid=\"login-submit-button\"\n                  disabled={ isLoginDisabled }\n                  onClick={ this.loadUserInfo }\n                >\n                  Entrar\n                </button>\n              </div>\n            </form>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: shape({ push: func }).isRequired,\n};\n\nexport default Login;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React, { Component } from 'react';\nimport { arrayOf, shape, string } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport '../styles/CardAlbum.css';\n\nclass CardAlbum extends Component {\n  render() {\n    const { artist, albums } = this.props;\n    return (\n      <>\n        <div className=\"Artist-Search\">\n          <p>{ `Resultado de álbuns de: ${artist}` }</p>\n        </div>\n        <div className=\"Artist-Albums\">\n          { albums.map(\n            ({\n              artistName,\n              collectionId,\n              collectionName,\n              artworkUrl100,\n            }) => (\n              <Link\n                to={ `/album/${collectionId}` }\n                data-testid={ `link-to-album-${collectionId}` }\n                key={ collectionId }\n                className=\"Song\"\n              >\n                <section className=\"Song-Info\">\n                  <div>\n                    <img\n                      src={ artworkUrl100 }\n                      alt={ collectionName }\n                    />\n                  </div>\n                  <div className=\"Artist-Song\">\n                    <h3>{collectionName}</h3>\n                    <p>{artistName}</p>\n                  </div>\n                </section>\n              </Link>\n            ),\n          ) }\n        </div>\n      </>\n    );\n  }\n}\n\nCardAlbum.propTypes = {\n  artist: string.isRequired,\n  albums: arrayOf(shape({})).isRequired,\n};\n\nexport default CardAlbum;\n","export default __webpack_public_path__ + \"static/media/default-user.347d90fa.svg\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\nimport defaultUser from '../images/default-user.svg';\nimport '../styles/Header.css';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userInfo: {},\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.getUserInfo();\n  }\n\n  getUserInfo = async () => {\n    const userData = await getUser();\n    this.setState({\n      userInfo: userData,\n      isLoading: false,\n    });\n  };\n\n  render() {\n    const {\n      userInfo: { name, image },\n      isLoading,\n    } = this.state;\n    return (\n      <header data-testid=\"header-component\" className=\"Header wave-header\">\n        {isLoading ? (\n          <h1>Carregando...</h1>\n        ) : (\n          <>\n            <div className=\"User-Informations\">\n              <Link to=\"/profile\" className=\"Link-Picture\">\n                <img\n                  src={ image || defaultUser }\n                  alt={ `User ${name}` }\n                  className=\"Header-Pic\"\n                />\n              </Link>\n              <Link to=\"/profile\" className=\"Link-Name\">\n                <p data-testid=\"header-user-name\">{name}</p>\n              </Link>\n            </div>\n            <nav>\n              <ul className=\"Links\">\n                <Link\n                  data-testid=\"link-to-search\"\n                  to=\"/search\"\n                  className=\"Link\"\n                >\n                  <li>Busca</li>\n                </Link>\n                <Link\n                  data-testid=\"link-to-favorites\"\n                  to=\"/favorites\"\n                  className=\"Link\"\n                >\n                  <li>Curtidas</li>\n                </Link>\n                <Link\n                  data-testid=\"link-to-profile\"\n                  to=\"/profile\"\n                  className=\"Link\"\n                >\n                  <li>Perfil</li>\n                </Link>\n              </ul>\n            </nav>\n          </>\n        )}\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport Loading from '../components/Loading';\nimport CardAlbum from '../components/CardAlbum';\nimport '../styles/Search.css';\nimport Header from '../components/Header';\n\nclass Search extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userSearch: '',\n      artist: '',\n      artistAlbums: [],\n      isLoading: false,\n      artistFound: false,\n    };\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({\n      userSearch: target.value,\n    });\n  };\n\n  getAlbums = () => {\n    const { userSearch } = this.state;\n    this.setState(\n      {\n        artist: userSearch,\n        isLoading: true,\n        userSearch: '',\n      },\n      async () => {\n        const { artist } = this.state;\n        this.setState({\n          isLoading: false,\n          artistFound: true,\n          artistAlbums: await searchAlbumsAPI(artist),\n        });\n      },\n    );\n  };\n\n  render() {\n    const { userSearch, artist, artistAlbums, artistFound, isLoading } = this.state;\n    if (isLoading) return <Loading />;\n    return (\n      <>\n        <Header />\n        <section data-testid=\"page-search\" className=\"Search-Container wave-bottom\">\n          <form className=\"Search-Form\" onSubmit={ this.getAlbums }>\n            <label htmlFor=\"search-artist\">\n              <input\n                type=\"text\"\n                id=\"search-artist\"\n                placeholder=\"Artistas\"\n                data-testid=\"search-artist-input\"\n                value={ userSearch }\n                onChange={ this.handleChange }\n              />\n            </label>\n            <button\n              type=\"button\"\n              data-testid=\"search-artist-button\"\n              disabled={ userSearch.length < 2 }\n              onClick={ this.getAlbums }\n            >\n              <FaSearch />\n            </button>\n          </form>\n          {artistFound && (\n            <main className=\"Albums-List wave-bottom\">\n              {artistAlbums.length > 0 ? (\n                <CardAlbum artist={ artist } albums={ artistAlbums } />\n              ) : (\n                <p>Nenhum álbum foi encontrado</p>\n              )}\n            </main>\n          )}\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Search;\n","import { shape, func } from 'prop-types';\nimport { FaHeart, FaRegHeart } from 'react-icons/fa';\nimport React, { Component } from 'react';\nimport '../styles/MusicCard.css';\n\nclass MusicCard extends Component {\n  render() {\n    const {\n      music: { trackId, trackName, previewUrl },\n      music,\n      handleChange,\n      favSongsChecked,\n    } = this.props;\n    return (\n      <section key={ trackId } className=\"Album-Song\">\n        <div className=\"Track-Name\">\n          <h3>{trackName}</h3>\n        </div>\n        <div className=\"Audio-and-Fav\">\n          <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n            <track kind=\"captions\" />\n            O seu navegador não suporta o elemento\n            {' '}\n            <code>audio</code>\n            .\n          </audio>\n          <label htmlFor={ trackId }>\n            <input\n              id={ trackId }\n              name={ trackId }\n              type=\"checkbox\"\n              data-testid={ `checkbox-music-${trackId}` }\n              checked={ !!favSongsChecked[trackId] }\n              onChange={ (e) => handleChange(e, music) }\n              className=\"Fav-Checkbox\"\n            />\n            {favSongsChecked[trackId] ? (\n              <>\n                <p>Favorita</p>\n                <FaHeart className=\"Fav\" />\n              </>\n            ) : (\n              <>\n                <p>Favorita</p>\n                <FaRegHeart className=\"Fav\" />\n              </>\n            )}\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  music: shape({}).isRequired,\n  handleChange: func.isRequired,\n  favSongsChecked: shape({}).isRequired,\n};\n\nexport default MusicCard;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","import { shape } from 'prop-types';\nimport React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport getMusics from '../services/musicsAPI';\nimport '../styles/Album.css';\n\nclass Album extends Component {\n  constructor() {\n    super();\n    this.state = {\n      album: [],\n      loadingFav: true,\n      favSongsChecked: {},\n      successfulLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.loadSongs();\n    this.loadFavoriteSongs();\n  }\n\n  handleChange = ({ target: { name, checked } }, song) => {\n    this.setState(({ favSongsChecked }) => ({\n      loadingFav: true,\n      favSongsChecked: { ...favSongsChecked, [name]: checked },\n    }), async () => {\n      await this.addOrRemoveFav(checked, song);\n      this.setState({ loadingFav: false });\n    });\n  };\n\n  addOrRemoveFav = async (action, song) => {\n    if (action) await addSong(song);\n    if (!action) await removeSong(song);\n  }\n\n  loadSongs = async () => {\n    const { match: { params: { id } } } = this.props;\n    const data = await getMusics(id);\n    this.setState({\n      album: data,\n      loadingFav: false,\n      successfulLoading: true,\n    });\n  };\n\n  loadFavoriteSongs = async () => {\n    const favSongs = await getFavoriteSongs();\n    favSongs.forEach(({ trackId }) => {\n      this.setState(({ favSongsChecked }) => ({\n        favSongsChecked: { ...favSongsChecked, [trackId]: true },\n      }));\n    });\n  }\n\n  render() {\n    const { album, loadingFav, favSongsChecked, successfulLoading } = this.state;\n    return (\n      <>\n        <Header />\n        <div data-testid=\"page-album\" className=\"Album-Container wave-bottom\">\n          {successfulLoading && (\n            <main className=\"Album wave-bottom\">\n              <div className=\"Album-Informations\">\n                <img src={ album[0].artworkUrl100 } alt=\"Album cover art\" />\n                <div>\n                  <h2 data-testid=\"album-name\">{album[0].collectionName}</h2>\n                  <p data-testid=\"artist-name\">{album[0].artistName}</p>\n                </div>\n              </div>\n              <div className=\"Songs\">\n                {loadingFav ? <Loading /> : (\n                  <>\n                    {album.slice(1).map((song) => (\n                      <MusicCard\n                        key={ song.trackId }\n                        music={ song }\n                        handleChange={ this.handleChange }\n                        favSongsChecked={ favSongsChecked }\n                      />\n                    ))}\n                  </>\n                )}\n              </div>\n            </main>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: shape({}).isRequired,\n};\n\nexport default Album;\n","import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport '../styles/Favorites.css';\n\nclass Favorites extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      favoriteSongs: [],\n      favSongsChecked: {},\n    };\n  }\n\n  componentDidMount() {\n    this.showFavSongs();\n  }\n\n  handleChange = ({ target: { name, checked } }, song) => {\n    this.setState(\n      ({ favSongsChecked }) => ({\n        isLoading: true,\n        favSongsChecked: { ...favSongsChecked, [name]: checked },\n      }),\n      async () => {\n        await removeSong(song);\n        this.showFavSongs();\n      },\n    );\n  };\n\n  showFavSongs = async () => {\n    const albums = await getFavoriteSongs();\n    const favSongs = albums.map(({ trackId }) => [trackId, true]);\n    this.setState({\n      favoriteSongs: albums,\n      favSongsChecked: Object.fromEntries(favSongs),\n      isLoading: false,\n    });\n  };\n\n  render() {\n    const { isLoading, favoriteSongs, favSongsChecked } = this.state;\n    return (\n      <>\n        <Header />\n        <section className=\"Favorites wave-bottom\" data-testid=\"page-favorites\">\n          <div className=\"Category-Header\">\n            <h2>Suas curtidas</h2>\n          </div>\n          { isLoading ? <Loading /> : (\n            <div className=\"Fav-Container\">\n              {favoriteSongs.length === 0 ? (\n                <h2>Você não tem nenhuma curtida!</h2>\n              ) : (\n                favoriteSongs.map((song) => (\n                  <MusicCard\n                    key={ song.trackId }\n                    music={ song }\n                    handleChange={ this.handleChange }\n                    favSongsChecked={ favSongsChecked }\n                  />\n                ))\n              )}\n            </div>\n          )}\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Favorites;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { getUser } from '../services/userAPI';\nimport defaultUser from '../images/default-user.svg';\nimport '../styles/Profile.css';\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userInfo: {},\n      isLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  fetchUser = async () => {\n    this.setState({ isLoading: true });\n    const user = await getUser();\n    this.setState({\n      userInfo: { ...user },\n      isLoading: false,\n    });\n  };\n\n  render() {\n    const { userInfo, isLoading } = this.state;\n    const { name, email, image, description } = userInfo;\n    return (\n      <>\n        <Header />\n        <section\n          data-testid=\"page-profile\"\n          className=\"Profile-Container wave-bottom\"\n        >\n          <div className=\"Category-Header\"><h2>Perfil</h2></div>\n          {isLoading ? (\n            <Loading />\n          ) : (\n            <section className=\"Profile\">\n              <div\n                className=\"Profile-Pic\"\n                style={ { backgroundColor: '#070b0e' } }\n              >\n                <img\n                  src={ image || defaultUser }\n                  alt={ `User ${name}` }\n                  data-testid=\"profile-image\"\n                />\n              </div>\n              <div className=\"Profile-Informations\">\n                <h3>{name}</h3>\n                <p>{email}</p>\n                <p>{description}</p>\n              </div>\n              <Link to=\"/profile/edit\" className=\"Edit-Profile\">\n                Editar perfil\n              </Link>\n            </section>\n          )}\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport { func, shape } from 'prop-types';\nimport Loading from '../components/Loading';\nimport { getUser, updateUser } from '../services/userAPI';\nimport Header from '../components/Header';\nimport defaultUser from '../images/default-user.svg';\nimport '../styles/ProfileEdit.css';\n\nclass ProfileEdit extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userInformations: {},\n      isLoading: false,\n      isSaveButtonDisabled: true,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n    this.validateNewInfo();\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState(\n      ({ userInformations }) => ({\n        userInformations: { ...userInformations, [name]: value },\n      }),\n      () => this.validateNewInfo(),\n    );\n  };\n\n  fetchUser = async () => {\n    this.setState({ isLoading: true });\n    const user = await getUser();\n    this.setState({\n      userInformations: { ...user },\n      isLoading: false,\n    });\n  };\n\n  updateProfileInfo = async (event) => {\n    event.preventDefault();\n    const { userInformations } = this.state;\n    this.setState({ isLoading: true });\n    await updateUser(userInformations);\n    this.redirectToProfile();\n  };\n\n  redirectToProfile = () => {\n    const {\n      history: { push },\n    } = this.props;\n    push('/profile');\n  };\n\n  validateNewInfo = () => {\n    const { userInformations } = this.state;\n    const informations = Object.values(userInformations);\n    const validate = informations.every((info) => info.length > 0);\n    this.setState({ isSaveButtonDisabled: !validate });\n  };\n\n  render() {\n    const { userInformations, isLoading, isSaveButtonDisabled } = this.state;\n    const { name, email, description, image } = userInformations;\n    return (\n      <>\n        <Header />\n        <section\n          data-testid=\"page-profile-edit\"\n          className=\"Profile-Container wave-bottom\"\n        >\n          <div className=\"Category-Header\"><h2>Editar perfil</h2></div>\n          {isLoading ? (\n            <Loading />\n          ) : (\n            <div className=\"Profile\">\n              <div className=\"Profile-Pic\">\n                <img src={ image || defaultUser } alt={ `User ${name}` } />\n              </div>\n              <form className=\"Profile-Edit-Form\">\n                <label htmlFor=\"edit-name\">\n                  Nome\n                  <input\n                    id=\"edit-name\"\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"Nome\"\n                    maxLength=\"32\"\n                    value={ name }\n                    onChange={ this.handleChange }\n                    data-testid=\"edit-input-name\"\n                  />\n                </label>\n                <label htmlFor=\"edit-image\">\n                  Imagem\n                  <input\n                    id=\"edit-image\"\n                    name=\"image\"\n                    type=\"type\"\n                    placeholder=\"URL da imagem\"\n                    value={ image }\n                    onChange={ this.handleChange }\n                    data-testid=\"edit-input-image\"\n                  />\n                </label>\n                <label htmlFor=\"edit-email\">\n                  Email\n                  <input\n                    id=\"edit-email\"\n                    name=\"email\"\n                    type=\"text\"\n                    maxLength=\"64\"\n                    placeholder=\"usuario@usuario.com\"\n                    value={ email }\n                    onChange={ this.handleChange }\n                    data-testid=\"edit-input-email\"\n                  />\n                </label>\n                <label htmlFor=\"edit-description\">\n                  Descrição\n                  <input\n                    id=\"edit-description\"\n                    name=\"description\"\n                    type=\"text\"\n                    placeholder=\"Sobre mim\"\n                    maxLength=\"120\"\n                    value={ description }\n                    onChange={ this.handleChange }\n                    data-testid=\"edit-input-description\"\n                  />\n                </label>\n                <button\n                  type=\"button\"\n                  disabled={ isSaveButtonDisabled }\n                  onClick={ this.updateProfileInfo }\n                  data-testid=\"edit-button-save\"\n                >\n                  Salvar\n                </button>\n              </form>\n            </div>\n          )}\n        </section>\n      </>\n    );\n  }\n}\n\nProfileEdit.propTypes = {\n  history: shape({ push: func }).isRequired,\n};\n\nexport default ProfileEdit;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/NotFound.css';\n\nclass ProfileEdit extends Component {\n  render() {\n    return (\n      <Link\n        to=\"/search\"\n        data-testid=\"page-not-found\"\n        className=\"Link-Not-Found\"\n      >\n        <div className=\"Not-Found\">\n          <h1>404</h1>\n          <p>\n            Página não encontrada.\n            <br />\n            Clique em qualquer lugar da tela para voltar ao início.\n          </p>\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Search from './pages/Search';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport NotFound from './pages/NotFound';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route path=\"/search\" component={ Search } />\n        <Route path=\"/album/:id\" component={ Album } />\n        <Route path=\"/favorites\" component={ Favorites } />\n        <Route exact path=\"/profile\" component={ Profile } />\n        <Route path=\"/profile/edit\" component={ ProfileEdit } />\n        <Route path=\"*\" component={ NotFound } />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}